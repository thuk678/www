--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local PathfindingService = game:GetService("PathfindingService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

--// State
local floatSpeed = 10
local tweenSpeed = 16

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "FloatTweenGui"
screenGui.ResetOnSpawn = false

--// Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 520, 0, 360)
frame.Position = UDim2.new(0.5, -260, 0.5, -180)
frame.BackgroundColor3 = Color3.fromRGB(35, 40, 50)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 24)

--// Title
local titleBar = Instance.new("Frame", frame)
titleBar.Size = UDim2.new(1, 0, 0, 44)
titleBar.BackgroundColor3 = Color3.fromRGB(28, 32, 42)
Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 24)

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -80, 1, 0)
titleLabel.Position = UDim2.new(0, 20, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "KirbulaX - Float & Tween"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextColor3 = Color3.fromRGB(210, 230, 255)
titleLabel.TextSize = 22
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

local exit = Instance.new("TextButton", titleBar)
exit.Size = UDim2.new(0, 44, 0, 44)
exit.Position = UDim2.new(1, -50, 0, 0)
exit.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
exit.Text = "âœ•"
exit.TextColor3 = Color3.new(1, 1, 1)
exit.Font = Enum.Font.GothamBlack
exit.TextSize = 30
exit.AutoButtonColor = false
Instance.new("UICorner", exit).CornerRadius = UDim.new(0, 24)
exit.MouseEnter:Connect(function()
	exit.BackgroundColor3 = Color3.fromRGB(220, 40, 40)
end)
exit.MouseLeave:Connect(function()
	exit.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
end)
exit.MouseButton1Click:Connect(function()
	screenGui:Destroy()
end)

--// Tabs Container
local tabFrame = Instance.new("Frame", frame)
tabFrame.Position = UDim2.new(0, 16, 0, 56)
tabFrame.Size = UDim2.new(1, -32, 0, 44)
tabFrame.BackgroundTransparency = 1

local function createTab(name, order)
	local tab = Instance.new("TextButton", tabFrame)
	tab.Size = UDim2.new(0, 150, 1, 0)
	tab.Position = UDim2.new(0, (order - 1) * 160, 0, 0)
	tab.BackgroundColor3 = Color3.fromRGB(50, 55, 75)
	tab.Text = name
	tab.Font = Enum.Font.GothamBold
	tab.TextColor3 = Color3.fromRGB(220, 220, 255)
	tab.TextSize = 20
	tab.AutoButtonColor = false
	Instance.new("UICorner", tab).CornerRadius = UDim.new(0, 14)
	tab.MouseEnter:Connect(function()
		tab.BackgroundColor3 = Color3.fromRGB(70, 80, 110)
	end)
	tab.MouseLeave:Connect(function()
		if tab.BackgroundColor3 ~= Color3.fromRGB(90, 110, 160) then
			tab.BackgroundColor3 = Color3.fromRGB(50, 55, 75)
		end
	end)
	return tab
end

local mainTab = createTab("Main", 1)
local customTab = createTab("Customization", 2)

local function setActiveTab(selectedTab)
	for _, tab in pairs(tabFrame:GetChildren()) do
		if tab:IsA("TextButton") then
			if tab == selectedTab then
				tab.BackgroundColor3 = Color3.fromRGB(90, 110, 160)
			else
				tab.BackgroundColor3 = Color3.fromRGB(50, 55, 75)
			end
		end
	end
end
setActiveTab(mainTab)

--// Containers (DECLARED BEFORE TAB BUTTON CONNECTIONS)
local mainContainer = Instance.new("Frame", frame)
mainContainer.Position = UDim2.new(0, 16, 0, 110)
mainContainer.Size = UDim2.new(1, -32, 1, -126)
mainContainer.BackgroundTransparency = 1
mainContainer.Visible = true

local customContainer = Instance.new("Frame", frame)
customContainer.Position = UDim2.new(0, 16, 0, 110)
customContainer.Size = UDim2.new(1, -32, 1, -126)
customContainer.BackgroundTransparency = 1
customContainer.Visible = false

-- Now connect tab buttons
mainTab.MouseButton1Click:Connect(function()
	mainContainer.Visible = true
	customContainer.Visible = false
	setActiveTab(mainTab)
end)

customTab.MouseButton1Click:Connect(function()
	mainContainer.Visible = false
	customContainer.Visible = true
	setActiveTab(customTab)
end)

--// Layouts
local function createButton(text, parent, color)
	local btn = Instance.new("TextButton", parent)
	btn.Size = UDim2.new(0, 220, 0, 48)
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1,1,1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 22
	btn.Text = text
	btn.AutoButtonColor = false
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 16)
	btn.MouseEnter:Connect(function()
		btn.BackgroundColor3 = color:Lerp(Color3.new(1,1,1), 0.15)
	end)
	btn.MouseLeave:Connect(function()
		btn.BackgroundColor3 = color
	end)
	return btn
end

local mainLayout = Instance.new("UIGridLayout", mainContainer)
mainLayout.CellSize = UDim2.new(0, 220, 0, 48)
mainLayout.CellPadding = UDim2.new(0, 16, 0, 16)

local customLayout = Instance.new("UIGridLayout", customContainer)
customLayout.CellSize = UDim2.new(0, 220, 0, 48)
customLayout.CellPadding = UDim2.new(0, 16, 0, 16)

--// Main Buttons
local floatBtn = createButton("Float: OFF", mainContainer, Color3.fromRGB(75, 150, 75))
local setBtn = createButton("Set Point", mainContainer, Color3.fromRGB(190, 70, 70))
local tweenBtn = createButton("Tween to Part", mainContainer, Color3.fromRGB(75, 150, 190))

--// Customization Controls
local function createInput(labelText, defaultValue, parent, callback)
	local container = Instance.new("Frame", parent)
	container.Size = UDim2.new(0, 220, 0, 48)
	container.BackgroundTransparency = 1

	local label = Instance.new("TextLabel", container)
	label.Size = UDim2.new(0, 120, 1, 0)
	label.Text = labelText
	label.Font = Enum.Font.GothamBold
	label.TextSize = 20
	label.TextColor3 = Color3.fromRGB(220, 220, 255)
	label.BackgroundTransparency = 1
	label.TextXAlignment = Enum.TextXAlignment.Left

	local box = Instance.new("TextBox", container)
	box.Position = UDim2.new(0, 120, 0, 0)
	box.Size = UDim2.new(0, 100, 1, 0)
	box.Text = tostring(defaultValue)
	box.Font = Enum.Font.GothamBold
	box.TextSize = 20
	box.TextColor3 = Color3.new(1,1,1)
	box.BackgroundColor3 = Color3.fromRGB(55, 55, 90)
	box.ClearTextOnFocus = false
	box.TextStrokeTransparency = 0.7
	box.PlaceholderText = "Enter number"
	box.TextWrapped = false
	box.AutoLocalize = false
	Instance.new("UICorner", box).CornerRadius = UDim.new(0, 14)

	box.FocusLost:Connect(function()
		local val = tonumber(box.Text)
		if val and val > 0 then
			callback(val)
		else
			box.Text = tostring(defaultValue)
		end
	end)
end

createInput("Float Speed", floatSpeed, customContainer, function(v) floatSpeed = v end)
createInput("Tween Speed", tweenSpeed, customContainer, function(v) tweenSpeed = v end)

--// Functions
local function getChar()
	local char = player.Character
	if not char then return nil, nil end
	local root = char:FindFirstChild("HumanoidRootPart")
	local hum = char:FindFirstChildOfClass("Humanoid")
	return hum, root
end

--// Float
local floatEnabled = false
local floatConn = nil
local bodyVel = nil

local function setFloat(state)
	floatEnabled = state
	floatBtn.Text = "Float: " .. (state and "ON" or "OFF")

	local hum, root = getChar()
	if not hum or not root then return end

	if state then
		if floatConn then floatConn:Disconnect() end
		bodyVel = root:FindFirstChild("FloatBodyVelocity") or Instance.new("BodyVelocity")
		bodyVel.Name = "FloatBodyVelocity"
		bodyVel.MaxForce = Vector3.new(1e6, 1e6, 1e6) -- full 3D control
		bodyVel.Velocity = Vector3.zero
		bodyVel.Parent = root

		local hoverHeight = 7

		floatConn = RunService.Heartbeat:Connect(function()
			local hum, r = getChar()
			if not hum or not r then return end
			local rayParams = RaycastParams.new()
			rayParams.FilterDescendantsInstances = {player.Character}
			rayParams.FilterType = Enum.RaycastFilterType.Blacklist
			local ray = workspace:Raycast(r.Position, Vector3.new(0, -20, 0), rayParams)
			if ray then
				local goalY = ray.Position.Y + hoverHeight
				local vY = (goalY - r.Position.Y) * floatSpeed

				-- Movement input
				local moveVector = Vector3.new(0,0,0)
				if UserInputService:IsKeyDown(Enum.KeyCode.W) then
					moveVector = moveVector + Vector3.new(0,0,-1)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.S) then
					moveVector = moveVector + Vector3.new(0,0,1)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.A) then
					moveVector = moveVector + Vector3.new(-1,0,0)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.D) then
					moveVector = moveVector + Vector3.new(1,0,0)
				end

				local moveVel
				if moveVector.Magnitude > 0 then
					moveVector = moveVector.Unit
					local camCF = workspace.CurrentCamera.CFrame
					local horMove = (camCF.RightVector * moveVector.X - camCF.LookVector * moveVector.Z) * floatSpeed * 5
					moveVel = Vector3.new(horMove.X, vY, horMove.Z)
				else
					moveVel = Vector3.new(0, vY, 0)
				end

				bodyVel.Velocity = moveVel
			else
				bodyVel.Velocity = Vector3.new(0, floatSpeed * 0.5, 0)
			end
		end)
	else
		if floatConn then floatConn:Disconnect() end
		if root and root:FindFirstChild("FloatBodyVelocity") then
			root.FloatBodyVelocity:Destroy()
		end
		bodyVel = nil
	end
end

floatBtn.MouseButton1Click:Connect(function()
	setFloat(not floatEnabled)
end)

--// Set Point
local setPart = nil
setBtn.MouseButton1Click:Connect(function()
	local _, root = getChar()
	if not root then return end
	if setPart then setPart:Destroy() end

	local p = Instance.new("Part")
	p.Size = Vector3.new(2, 2, 2)
	p.Anchored = true
	p.CanCollide = false
	p.Color = Color3.fromRGB(255, 0, 0)
	p.Transparency = 0.5
	p.Position = root.Position
	p.Name = "SetPoint"
	p.Parent = workspace
	setPart = p
end)

--// Tween (smooth)
local tweening = false
local function tweenToSetPoint()
	if tweening or not setPart then return end
	local humanoid, root = getChar()
	if not humanoid or not root then return end

	local path = PathfindingService:CreatePath({
		AgentRadius = 2,
		AgentHeight = 5,
		AgentCanJump = true,
		AgentJumpHeight = 10,
		AgentMaxSlope = 45
	})

	local destination = setPart.Position + Vector3.new(0, 7, 0)
	path:ComputeAsync(root.Position, destination)
	if path.Status ~= Enum.PathStatus.Success then return end

	local waypoints = path:GetWaypoints()
	if #waypoints < 2 then return end

	tweening = true

	coroutine.wrap(function()
		for i = 2, #waypoints do
			local startPos = waypoints[i - 1].Position + Vector3.new(0, 7, 0)
			local endPos = waypoints[i].Position + Vector3.new(0, 7, 0)
			local dist = (endPos - startPos).Magnitude
			local duration = dist / tweenSpeed

			local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
			local goalCFrame = CFrame.new(endPos, endPos + (endPos - startPos).Unit)
			local tween = TweenService:Create(root, tweenInfo, {CFrame = goalCFrame})
			tween:Play()
			tween.Completed:Wait()
		end
		tweening = false
	end)()
end

tweenBtn.MouseButton1Click:Connect(tweenToSetPoint)
