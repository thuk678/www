local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FancyMovableExitGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create main Frame (wider)
local frameWidth = 500
local frameHeight = 300
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, frameWidth, 0, frameHeight)
frame.Position = UDim2.new(0.5, -frameWidth/2, 0.5, -frameHeight/2)
frame.BackgroundColor3 = Color3.fromRGB(40, 44, 52)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

-- Add UICorner for rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 18)
corner.Parent = frame

-- Add UIStroke for border
local stroke = Instance.new("UIStroke")
stroke.Color = Color3.fromRGB(80, 170, 255)
stroke.Thickness = 2
stroke.Parent = frame

-- Add UIGradient for background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 170, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 44, 52))
}
gradient.Rotation = 45
gradient.Parent = frame

-- Add drop shadow
local shadow = Instance.new("ImageLabel")
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"
shadow.Size = UDim2.new(1, 40, 1, 40)
shadow.Position = UDim2.new(0, -20, 0, -20)
shadow.ImageTransparency = 0.7
shadow.ZIndex = 0
shadow.Parent = frame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 36)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 34, 42)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 18)
titleCorner.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -40, 1, 0)
titleLabel.Position = UDim2.new(0, 16, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "KirbulaX"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextColor3 = Color3.fromRGB(200, 220, 255)
titleLabel.TextSize = 20
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

-- Exit Button
local exitButton = Instance.new("TextButton")
exitButton.Size = UDim2.new(0, 36, 0, 36)
exitButton.Position = UDim2.new(1, -40, 0, 0)
exitButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
exitButton.Text = "X"
exitButton.TextColor3 = Color3.new(1,1,1)
exitButton.TextSize = 28
exitButton.Font = Enum.Font.GothamBlack
exitButton.AutoButtonColor = true
exitButton.Parent = titleBar

local exitCorner = Instance.new("UICorner")
exitCorner.CornerRadius = UDim.new(1, 0)
exitCorner.Parent = exitButton

local exitStroke = Instance.new("UIStroke")
exitStroke.Color = Color3.fromRGB(200, 50, 50)
exitStroke.Thickness = 1
exitStroke.Parent = exitButton

exitButton.MouseEnter:Connect(function()
    exitButton.BackgroundColor3 = Color3.fromRGB(255, 40, 40)
    exitButton.TextColor3 = Color3.fromRGB(255,255,180)
end)
exitButton.MouseLeave:Connect(function()
    exitButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    exitButton.TextColor3 = Color3.new(1,1,1)
end)

exitButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Optional: Animate the frame in
frame.Position = UDim2.new(0.5, -frameWidth/2, 1, 0)
frame.Visible = false
task.wait(0.1)
frame.Visible = true
frame:TweenPosition(UDim2.new(0.5, -frameWidth/2, 0.5, -frameHeight/2), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.4, true)

-- UI Layout for new controls
local controlsFrame = Instance.new("Frame")
controlsFrame.Size = UDim2.new(1, -32, 0, 180)
controlsFrame.Position = UDim2.new(0, 16, 0, 56)
controlsFrame.BackgroundTransparency = 1
controlsFrame.Parent = frame

-- Use UIGridLayout for 2 columns
local uiGrid = Instance.new("UIGridLayout")
uiGrid.CellPadding = UDim2.new(0, 12, 0, 12)
uiGrid.CellSize = UDim2.new(0, 220, 0, 40)
uiGrid.FillDirection = Enum.FillDirection.Horizontal
uiGrid.SortOrder = Enum.SortOrder.LayoutOrder
uiGrid.Parent = controlsFrame

-- Noclip Toggle Button
local noclipButton = Instance.new("TextButton")
noclipButton.Size = UDim2.new(0, 220, 0, 40)
noclipButton.BackgroundColor3 = Color3.fromRGB(60, 60, 120)
noclipButton.Text = "Noclip: OFF"
noclipButton.TextColor3 = Color3.fromRGB(255,255,255)
noclipButton.TextSize = 20
noclipButton.Font = Enum.Font.GothamBold
noclipButton.AutoButtonColor = true
noclipButton.LayoutOrder = 1
noclipButton.Parent = controlsFrame

local noclipCorner = Instance.new("UICorner")
noclipCorner.CornerRadius = UDim.new(0, 12)
noclipCorner.Parent = noclipButton

-- Speed Customization
local speedFrame = Instance.new("Frame")
speedFrame.Size = UDim2.new(0, 220, 0, 40)
speedFrame.BackgroundTransparency = 1
speedFrame.LayoutOrder = 2
speedFrame.Parent = controlsFrame

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0, 80, 1, 0)
speedLabel.Position = UDim2.new(0, 0, 0, 0)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Speed:"
speedLabel.Font = Enum.Font.GothamBold
speedLabel.TextColor3 = Color3.fromRGB(200, 220, 255)
speedLabel.TextSize = 20
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = speedFrame

local speedBox = Instance.new("TextBox")
speedBox.Size = UDim2.new(0, 100, 1, 0)
speedBox.Position = UDim2.new(0, 90, 0, 0)
speedBox.BackgroundColor3 = Color3.fromRGB(60, 120, 120)
speedBox.Text = "16"
speedBox.TextColor3 = Color3.fromRGB(255,255,255)
speedBox.TextSize = 20
speedBox.Font = Enum.Font.GothamBold
speedBox.ClearTextOnFocus = false
speedBox.Parent = speedFrame

local speedCorner = Instance.new("UICorner")
speedCorner.CornerRadius = UDim.new(0, 12)
speedCorner.Parent = speedBox

-- Float/hover Button
local floatButton = Instance.new("TextButton")
floatButton.Size = UDim2.new(0, 220, 0, 40)
floatButton.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
floatButton.Text = "Float: OFF"
floatButton.TextColor3 = Color3.fromRGB(255,255,255)
floatButton.TextSize = 20
floatButton.Font = Enum.Font.GothamBold
floatButton.AutoButtonColor = true
floatButton.LayoutOrder = 3
floatButton.Parent = controlsFrame

local floatCorner = Instance.new("UICorner")
floatCorner.CornerRadius = UDim.new(0, 12)
floatCorner.Parent = floatButton

-- SetPoint Button
local setPointButton = Instance.new("TextButton")
setPointButton.Size = UDim2.new(0, 220, 0, 40)
setPointButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
setPointButton.Text = "SetPoint"
setPointButton.TextColor3 = Color3.fromRGB(255,255,255)
setPointButton.TextSize = 20
setPointButton.Font = Enum.Font.GothamBold
setPointButton.AutoButtonColor = true
setPointButton.LayoutOrder = 4
setPointButton.Parent = controlsFrame

local setPointCorner = Instance.new("UICorner")
setPointCorner.CornerRadius = UDim.new(0, 12)
setPointCorner.Parent = setPointButton

-- Tween to Part Button
local tweenToPartButton = Instance.new("TextButton")
tweenToPartButton.Size = UDim2.new(0, 220, 0, 40)
tweenToPartButton.BackgroundColor3 = Color3.fromRGB(60, 120, 180)
tweenToPartButton.Text = "Tween to Part"
tweenToPartButton.TextColor3 = Color3.fromRGB(255,255,255)
tweenToPartButton.TextSize = 20
tweenToPartButton.Font = Enum.Font.GothamBold
tweenToPartButton.AutoButtonColor = true
tweenToPartButton.LayoutOrder = 5
tweenToPartButton.Parent = controlsFrame

local tweenToPartCorner = Instance.new("UICorner")
tweenToPartCorner.CornerRadius = UDim.new(0, 12)
tweenToPartCorner.Parent = tweenToPartButton

-- State variables
local noclipEnabled = false
local floatEnabled = false
local floatConnection = nil
local noclipConnection = nil
local lastSpeed = 16

-- Pathfinding/SetPoint state
local setPointPart = nil
local tweening = false

-- Helper: Get Humanoid and RootPart
local function getCharParts()
    local character = player.Character
    if not character then return nil, nil end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local root = character:FindFirstChild("HumanoidRootPart")
    return humanoid, root
end

-- Helper: Get and cache default speed
local function updateDefaultSpeed()
    local humanoid = getCharParts()
    if humanoid then
        lastSpeed = humanoid.WalkSpeed
        speedBox.Text = tostring(humanoid.WalkSpeed)
    else
        lastSpeed = 16
        speedBox.Text = "16"
    end
end

-- Noclip logic
local function setNoclip(state)
    noclipEnabled = state
    noclipButton.Text = "Noclip: " .. (state and "ON" or "OFF")
    if state then
        if noclipConnection then noclipConnection:Disconnect() end
        noclipConnection = game:GetService("RunService").Stepped:Connect(function()
            local character = player.Character
            if character then
                for i, part in character:GetChildren() do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if noclipConnection then noclipConnection:Disconnect() end
        local character = player.Character
        if character then
            for i, part in character:GetChildren() do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end

noclipButton.MouseButton1Click:Connect(function()
    setNoclip(not noclipEnabled)
end)

-- Speed logic
local function setSpeed(newSpeed)
    lastSpeed = newSpeed
    local humanoid = getCharParts()
    if humanoid then
        humanoid.WalkSpeed = newSpeed
    end
end

speedBox.FocusLost:Connect(function(enterPressed)
    local val = tonumber(speedBox.Text)
    if val and val > 0 then
        setSpeed(val)
    else
        speedBox.Text = tostring(lastSpeed)
    end
end)

-- Keep speed when respawn
player.CharacterAdded:Connect(function(char)
    task.wait(0.1)
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = lastSpeed
        speedBox.Text = tostring(lastSpeed)
    end
    if noclipEnabled then
        setNoclip(true)
    end
end)

-- Float logic
local function setFloat(state)
    floatEnabled = state
    floatButton.Text = "Float: " .. (state and "ON" or "OFF")
    if state then
        if floatConnection then floatConnection:Disconnect() end
        floatConnection = game:GetService("RunService").Heartbeat:Connect(function()
            local humanoid, root = getCharParts()
            if humanoid and root then
                local rayOrigin = root.Position
                local rayDirection = Vector3.new(0, -20, 0)
                local raycastParams = RaycastParams.new()
                raycastParams.FilterDescendantsInstances = {player.Character}
                raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
                local targetY
                if result then
                    targetY = result.Position.Y + 5
                else
                    targetY = root.Position.Y
                end
                local currentCFrame = root.CFrame
                root.CFrame = CFrame.new(currentCFrame.Position.X, targetY, currentCFrame.Position.Z) * CFrame.Angles(0, currentCFrame:ToOrientation())
                humanoid.PlatformStand = false
                local rootVel = root.Velocity
                root.Velocity = Vector3.new(rootVel.X, 0, rootVel.Z)
            end
        end)
    else
        if floatConnection then floatConnection:Disconnect() end
        local humanoid, root = getCharParts()
        if humanoid then
            humanoid.PlatformStand = false
        end
    end
end

floatButton.MouseButton1Click:Connect(function()
    setFloat(not floatEnabled)
end)

-- SetPoint logic
local function clearSetPoint()
    if setPointPart and setPointPart.Parent then
        setPointPart:Destroy()
    end
    setPointPart = nil
end

setPointButton.MouseButton1Click:Connect(function()
    local humanoid, root = getCharParts()
    if not root then return end
    clearSetPoint()
    local part = Instance.new("Part")
    part.Anchored = true
    part.CanCollide = false
    part.Size = Vector3.new(2,2,2)
    part.Position = root.Position
    part.Color = Color3.fromRGB(255, 0, 0)
    part.Transparency = 0.5
    part.Name = "SetPointPart"
    part.Parent = workspace
    setPointPart = part
end)

-- Tween to Part logic
local function tweenToSetPoint()
    if tweening or not setPointPart then return end
    local humanoid, root = getCharParts()
    if not root or not humanoid then return end

    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentJumpHeight = 7,
        AgentMaxSlope = 45,
    })
    local targetPos = setPointPart.Position + Vector3.new(0, 3, 0)
    path:ComputeAsync(root.Position, targetPos)
    if path.Status ~= Enum.PathStatus.Success then
        warn("Pathfinding failed: " .. path.Status.Name)
        return
    end
    local waypoints = path:GetWaypoints()
    
    local adjustedPoints = {}
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {player.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    
    for i, wp in waypoints do
        local pt = wp.Position
        local rayOrigin = pt + Vector3.new(0, 5, 0)
        local rayDirection = Vector3.new(0, -10, 0)
        local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
        
        if result then
            pt = result.Position + Vector3.new(0, 5, 0)
        else
            pt = pt + Vector3.new(0, 5, 0)
        end
        
        if i == #waypoints then
            local setPointRayOrigin = targetPos
            local setPointResult = workspace:Raycast(setPointRayOrigin, rayDirection, raycastParams)
            if setPointResult then
                pt = setPointResult.Position + Vector3.new(0, 5, 0)
            else
                pt = targetPos
            end
        end
        
        table.insert(adjustedPoints, pt)
    end
    
    tweening = true
    setNoclip(true)
    local oldPlatformStand = humanoid.PlatformStand
    humanoid.PlatformStand = true
    local userSpeed = tonumber(speedBox.Text) or lastSpeed or 16
    local slowFactor = 2  -- Slow down the tween

    task.wait(0.1)  -- Small buffer for clean start
    
    coroutine.wrap(function()
        for i = 2, #adjustedPoints do
            if not root or not root.Parent or not humanoid then break end
            local startPos = adjustedPoints[i-1]
            local goalPos = adjustedPoints[i]
            local distance = (goalPos - startPos).Magnitude
            local duration = (distance / userSpeed) * slowFactor
            local lookVector = (goalPos - startPos).Unit
            root.CFrame = CFrame.new(startPos, goalPos)
            local tween = TweenService:Create(root, TweenInfo.new(duration, Enum.EasingStyle.Linear), {
                CFrame = CFrame.new(goalPos, goalPos + lookVector)
            })
            tween:Play()
            tween.Completed:Wait()
            root.CFrame = CFrame.new(goalPos, goalPos + lookVector)  -- Ensure clean final CFrame
        end
        
        -- Final position adjustment to prevent ground clipping
        local rayOrigin = root.Position + Vector3.new(0, 5, 0)
        local rayDirection = Vector3.new(0, -10, 0)
        local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
        if result then
            root.CFrame = CFrame.new(result.Position + Vector3.new(0, 5, 0), root.CFrame.LookVector)
        end
        
        -- Freeze and anchor
        if root and humanoid then
            root.Anchored = true  -- Anchor to prevent any movement
            root.Velocity = Vector3.new(0, 0, 0)
            root.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
            humanoid.PlatformStand = true
            task.wait(1)  -- 1-second freeze
            root.Anchored = false  -- Unanchor
        end
        
        -- Restore controls/collision
        humanoid.PlatformStand = oldPlatformStand
        setNoclip(false)
        tweening = false
    end)()
end

tweenToPartButton.MouseButton1Click:Connect(function()
    tweenToSetPoint()
end)

-- On GUI creation, cache the default speed if possible
updateDefaultSpeed()

-- Clean up on GUI close
screenGui.AncestryChanged:Connect(function()
    if not screenGui:IsDescendantOf(game) then
        if floatConnection then floatConnection:Disconnect() end
        if noclipConnection then noclipConnection:Disconnect() end
        clearSetPoint()
    end
end)
